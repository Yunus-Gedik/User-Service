spring.application.name=User

server.port=8086

spring.datasource.url=jdbc:postgresql://localhost:8006/user_service
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=create

#spring.kafka.bootstrap-servers=localhost:9092 #docker usage
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id.stats=user-service-group

#earliast = read all kafka events available
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.consumer.properties.spring.json.value.default.type=org.yunusgedik.user.Model.Kafka.BookingEvent

jwt.private-key=classpath:keys/jwt_private.pem
jwt.expiration-minutes=30